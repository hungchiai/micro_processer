#include <stdio.h>
#include "NUC100Series.h"
#include "MCU_init.h"
#include "SYS_init.h"
#include "LCD.h"
#include "Scankey.h"

#define x_dis 17
#define y_dis 10

	unsigned char lattice[64] = {
	0xFF,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
	0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xFF,
	0xFF,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xFF
	};

	unsigned char black_lattice[64] = {
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
	};

	unsigned char circle_lattice[64] = {
	0xFF,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xC1,0x21,0x11,0x11,
	0x11,0x21,0xC1,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xFF,
	0xFF,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x81,0x82,0x84,0x84,
	0x84,0x82,0x81,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xFF,
	};

	unsigned char cross_lattice[64] = {
	0xFF,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x11,0x21,0x41,0x81,0x81,
	0x41,0x41,0x21,0x11,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xFF,
	0xFF,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x84,0x82,0x82,0x81,0x80,
	0x81,0x82,0x84,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xFF,
	};

	void init_array(char array[][3], const char character){
	int i=0, j=0;

	for(i=0; i<3; i++){
	for(j=0; j<3; j++){
	array[i][j] = character;
	}
	}
	}

	void init_Text(char Text[], const char character){
	int i=0;

	for(i=0; i<16; i++){
	Text[i] = '\0';
	}
	}

	void my_draw(char user[][3]){
	int i=0, j=0;
	int x=0, y=0;

	for(i=0; i<3; i++){
	for(j=0; j<3; j++){
	x=i*31+x_dis; y=j*15+y_dis;
	if(user[i][j] == '\0'){
	draw_Bmp32x16(x, y, FG_COLOR, BG_COLOR, lattice);
	}else if(user[i][j] == 'O'){
	draw_Bmp32x16(x, y, FG_COLOR, BG_COLOR, circle_lattice);
	}else if(user[i][j] == 'X'){
	draw_Bmp32x16(x, y, FG_COLOR, BG_COLOR, cross_lattice);
	}
	}
	}
	}

	void flash(const int index_x, const int index_y, char user[][3]){
	if(user[index_x][index_y] == '\0'){
	draw_Bmp32x16(index_x*31+x_dis, index_y*15+y_dis, FG_COLOR, BG_COLOR, black_lattice);
	CLK_SysTickDelay(1000000000);
	draw_Bmp32x16(index_x*31+x_dis, index_y*15+y_dis, BG_COLOR, BG_COLOR, black_lattice);
	CLK_SysTickDelay(1000000000);
	}else{
	draw_Bmp32x16(index_x*31+x_dis, index_y*15+y_dis, FG_COLOR, BG_COLOR, lattice);
	CLK_SysTickDelay(1000000000);
	draw_Bmp32x16(index_x*31+x_dis, index_y*15+y_dis, BG_COLOR, BG_COLOR, lattice);
	CLK_SysTickDelay(1000000000);
	}
	}

	int check(char user[][3], int *temp){
	int i=0, j=0;
	int flag = 0;

	for(i=0; i<3; i++){
	if(user[0][i] != '\0'){
	if(user[0][i]==user[1][i] && user[1][i]==user[2][i]){
	if(user[0][i] == 'O'){
	*temp = 0;
	}else{
	*temp = 1;

	}
	return 1;
	}
	}
	}

	for(i=0; i<3; i++){
	if(user[i][0] != '\0'){
	if(user[i][0]==user[i][1] && user[i][1]==user[i][2]){
	if(user[i][0] == 'O'){
	*temp = 0;
	}else{
	*temp = 1;
	}
	return 1;
	}
	}
	}

	if(user[1][1] != '\0'){
	if(user[0][0]==user[1][1] && user[1][1]==user[2][2]){
	if(user[1][1] == 'O'){
	*temp = 0;
	}else{
	*temp = 1;
	}
	return 1;
	}

	if(user[2][0]==user[1][1] && user[1][1]==user[0][2]){
	if(user[1][1] == 'O'){
	*temp = 0;
	}else{
	*temp = 1;
	}
	return 1;
	}
	}

	for(i=0; i<3; i++){
	for(j=0; j<3; j++){
	if(user[i][j] == '\0'){
	flag = 1;
	}
	}
	}

	if(flag == 0){
	return 0;
	}else{
	return -1;
	}
	}

	int main(void){
	int8_t key=0;

	char user[3][3];
	int index_x = 0, index_y = 0;
	int OX[2] = {'O', 'X'};
	int index_OX = 0;
	int temp = 0;

	char Text[16];

	SYS_Init();
	 
	init_LCD();
	clear_LCD();

	OpenKeyPad();

	init_array(user, '\0');
	my_draw(user);

	while(key==0){
	flash(index_y,index_x, user);
	key=ScanKey();
	}

	while(1){
	clear_LCD();

	my_draw(user);
	flash(index_x, index_y, user);

			key=ScanKey(); // Scan 3x3 keypad
			switch(key){   // input 1~9 to chang (x,y) direction
	case 2:
	index_y--;
	if(index_y<0){
	index_y = 0;
	}
	break;
	case 4:
	index_x--;
	if(index_x<0){
	index_x = 0;
	}
	break;

	case 5:
	if(user[index_x][index_y] == '\0'){
	user[index_x][index_y] = OX[index_OX%2];
	index_OX++;

	if(check(user, &temp) == 1){
	clear_LCD();
	while(1){
	sprintf(Text, "%c WIN", OX[temp]);
	print_Line(0, Text);
	}
	}else if(check(user, &temp) == 0){
	clear_LCD();
	while(1){
	print_Line(0, "Game over");
	}
	}
	}
	break;

	case 6:
	index_x++;
	if(index_x>2){
	index_x = 2;
	}
	break;
	case 8:
	index_y++;
	if(index_y > 2){
	index_y = 2;
	}
	break;
	default: break;
  	}
	}
}
