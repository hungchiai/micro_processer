結合輸入（Keypad）、輸出（七段顯示）、音效（蜂鳴器）的互動程式，實現：
用按鍵輸入 1~3 的樂曲指令
支援輸入清除（4）與刪除（6）
按下 5 播放輸入的樂曲順序
每個輸入都即時顯示在七段顯示器上



#include <stdio.h>
#include "NUC100Series.h"
#include "MCU_init.h"
#include "SYS_init.h"
#include "Seven_Segment.h"
#include "Scankey.h"

#define BLANK 16 


// 曲子1：Do → Re → Mi
static void song1(void) {
    int i;
    for (i = 0; i < 250; i++) { CloseSevenSegment(); ShowSevenSegment(3, 1); PB11 = 0; CLK_SysTickDelay(1200); PB11 = 1; CLK_SysTickDelay(2800); } // Do
    for (i = 0; i < 300; i++) { CloseSevenSegment(); ShowSevenSegment(3, 1); PB11 = 0; CLK_SysTickDelay(1000); PB11 = 1; CLK_SysTickDelay(2300); } // Re
    for (i = 0; i < 333; i++) { CloseSevenSegment(); ShowSevenSegment(3, 1); PB11 = 0; CLK_SysTickDelay(900);  PB11 = 1; CLK_SysTickDelay(2100); } // Mi
}

// 曲子2：Mi → Re → Do（倒過來）
static void song2(void) {
    int i;
    for (i = 0; i < 333; i++) { CloseSevenSegment(); ShowSevenSegment(3, 2); PB11 = 0; CLK_SysTickDelay(900);  PB11 = 1; CLK_SysTickDelay(2100); } // Mi
    for (i = 0; i < 300; i++) { CloseSevenSegment(); ShowSevenSegment(3, 2); PB11 = 0; CLK_SysTickDelay(1000); PB11 = 1; CLK_SysTickDelay(2300); } // Re
    for (i = 0; i < 250; i++) { CloseSevenSegment(); ShowSevenSegment(3, 2); PB11 = 0; CLK_SysTickDelay(1200); PB11 = 1; CLK_SysTickDelay(2800); } // Do
}

// 曲子3：連續三次 Do 音
static void song3(void) {
    int r, i;
    for (r = 0; r < 3; r++) {
        for (i = 0; i < 250; i++) {
            CloseSevenSegment();
            ShowSevenSegment(3, 3);
            PB11 = 0;
            CLK_SysTickDelay(1200);
            PB11 = 1;
            CLK_SysTickDelay(2800);
        }
        CLK_SysTickDelay(5000); 
    }
}


static uint8_t Scan(void)
{
    // row 0（PA2）：檢查鍵 1,4
    PA0 = 1; PA1 = 1; PA2 = 0;
    PA3 = 1; PA4 = 1; PA5 = 1;
    if (PA3 == 0) return 1;
    if (PA4 == 0) return 4;

    // row 1（PA1）：檢查鍵 2,5
    PA0 = 1; PA1 = 0; PA2 = 1;
    PA3 = 1; PA4 = 1; PA5 = 1;
    if (PA3 == 0) return 2;
    if (PA4 == 0) return 5;

    // row 2（PA0）：檢查鍵 3,6
    PA0 = 0; PA1 = 1; PA2 = 1;
    PA3 = 1; PA4 = 1; PA5 = 1;
    if (PA3 == 0) return 3;
    if (PA4 == 0) return 6;

    return 0; // 沒有按鍵按下
}


static void show_digit_if(int pos, int val)
{
    CloseSevenSegment();
    if (val != BLANK) {
        ShowSevenSegment(pos, val);
    }
    CLK_SysTickDelay(5000); 
}

// ===== 主程式開始 =====
int main(void)
{
    int q[3] = {0, 0, 0};   
    int qlen = 0;           
    int last = 0, num;

    SYS_Init();             
    OpenSevenSegment();     
    CloseSevenSegment();   
    PB->DOUT |= 0xFF;       

    OpenKeyPad();           
    GPIO_SetMode(PB, BIT11, GPIO_PMD_OUTPUT); 
    PB11 = 1;               

    while (1)
    {
        num = Scan(); // 掃描是否有按鍵
        if (num != last) {
            CLK_SysTickDelay(20000); // debounce 去彈跳
            num = Scan(); // 再掃一次確認
        }

        if (num != last && num != 0) {
            if (num == 4) { // 清除輸入
                qlen = 0;
            } else if (num == 6) { // Backspace
                if (qlen > 0) qlen--;
            } else if (num >= 1 && num <= 3) { // 有效樂曲代碼輸入
                if (qlen < 3) {
                    q[qlen] = num;
                    qlen++;
                }
            } else if (num == 5) { // 播放輸入的樂曲組合
                int k;
                for (k = 0; k < qlen; ++k) {
                    switch (q[k]) {
                        case 1: song1(); break;
                        case 2: song2(); break;
                        case 3: song3(); break;
                        default: break;
                    }
                }
                qlen = 0;        // 播放完後清空輸入
                CloseSevenSegment();
                PB11 = 1;
            }
        }

        // 顯示目前輸入的按鍵序列到七段顯示器
        int d3 = BLANK; // 第 3 段不使用
        int d2 = BLANK, d1 = BLANK, d0 = BLANK;

        if (qlen == 1) {
            d0 = q[0];
        } else if (qlen == 2) {
            d1 = q[0]; d0 = q[1];
        } else if (qlen == 3) {
            d2 = q[0]; d1 = q[1]; d0 = q[2];
        }

        
        show_digit_if(3, d3);
        show_digit_if(2, d2);
        show_digit_if(1, d1);
        show_digit_if(0, d0);

        last = num; 
    }
}
